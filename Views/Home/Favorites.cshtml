@{
    ViewData["Title"] = "My Favorites";
    var favoritePropertyIds = ViewBag.FavoritePropertyIds as List<int> ?? new List<int>();
}
@model IEnumerable<PropertyDetailsViewModel>

<!-- Add Flowbite CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.css" rel="stylesheet">
<!-- Add Font Awesome for additional icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    .property-card {
        transition: all 0.4s ease;
        border: 1px solid #e5e7eb;
        margin-bottom: 20px;
    }

        .property-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            border-color: #93c5fd;
        }

    .image-hover {
        transition: transform 0.6s ease;
    }

    .property-card:hover .image-hover {
        transform: scale(1.08);
    }

    .btn-view-details {
        background: linear-gradient(135deg, #f97316 0%, #ea580c 100%);
        color: white;
        transition: all 0.3s ease;
    }

        .btn-view-details:hover {
            background: linear-gradient(135deg, #ea580c 0%, #c2410c 100%);
            transform: translateY(-2px);
        }

    .property-features {
        display: flex;
        gap: 1rem;
        margin-top: 0.5rem;
        margin-bottom: 1rem;
    }

    .property-feature {
        display: flex;
        align-items: center;
        font-size: 0.875rem;
        color: #6b7280;
    }

        .property-feature i {
            margin-right: 0.25rem;
        }

    .favorite-btn {
        transition: all 0.3s ease;
    }

        .favorite-btn:hover {
            transform: scale(1.2);
        }

        .favorite-btn i.fa-solid.text-red-500 {
            color: #ef4444;
        }

    /* Toast notification styles */
    .toast-notification {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
        padding: 1rem;
        border-radius: 0.5rem;
        color: white;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        z-index: 50;
        opacity: 1;
        transition: opacity 0.5s ease;
    }

    .toast-success {
        background-color: #10b981;
    }

    .toast-error {
        background-color: #ef4444;
    }

    .toast-info {
        background-color: #3b82f6;
    }

    .empty-favorites {
        text-align: center;
        padding: 4rem 2rem;
        background-color: #f9fafb;
        border-radius: 0.75rem;
        margin: 2rem 0;
    }
</style>

<!-- CSRF Token for AJAX requests -->
@Html.AntiForgeryToken()

<!-- Favorites Header Section -->
<section class="py-10 bg-gradient-to-r from-sky-100 to-blue-100">
    <div class="max-w-screen-xl mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
            <div>
                <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-2 mt-4">My Favorite Properties</h1>
                <p class="text-gray-600">Your collection of saved properties</p>
            </div>
            <div class="mt-4 md:mt-0">
                <a href="@Url.Action("Home", "Home")" class="inline-flex items-center text-sky-600 hover:text-sky-800">
                    <i class="fa-solid fa-arrow-left mr-2"></i> Back to Home
                </a>
            </div>
        </div>
    </div>
</section>

<!-- Favorites Properties Section -->
<section class="py-12 bg-white">
    <div class="max-w-screen-xl mx-auto px-4">
        @if (Model.Any())
        {
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                @foreach (var property in Model)
                {
                    <div class="property-card bg-white rounded-xl overflow-hidden h-full"
                         data-latitude="@property.Latitude"
                         data-longitude="@property.Longitude">
                        <div class="relative overflow-hidden h-64">
                            @if (property.ImageUrl != null && property.ImageUrl.Any())
                            {
                                <img src="@property.ImageUrl.First()" alt="@property.Title" class="w-full h-full object-cover image-hover">
                            }
                            else
                            {
                                <div class="w-full h-full bg-gray-200 flex items-center justify-center">
                                    <span class="text-gray-500">No Image Available</span>
                                </div>
                            }
                            <div class="absolute top-4 right-5 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                                <i class="fa-solid fa-heart mr-1"></i> Favorite
                            </div>
                            <div class="absolute bottom-4 left-4 flex gap-2">
                                <span class="bg-black bg-opacity-60 text-white text-xs font-medium px-2.5 py-1 rounded-lg">
                                    <i class="fa-solid fa-camera mr-1"></i> @(property.ImageUrl?.Count() ?? 0) Photos
                                </span>
                                @if (!string.IsNullOrEmpty(property.ThreeDModel))
                                {
                                    <span class="bg-purple-600 bg-opacity-80 text-white text-xs font-medium px-2.5 py-1 rounded-lg">
                                        <i class="fa-solid fa-cube mr-1"></i> 3D Tour
                                    </span>
                                }
                            </div>
                        </div>

                        <div class="p-6">
                            <div class="flex items-center mb-3">
                                <span class="bg-sky-100 text-sky-800 text-xs font-medium px-2.5 py-0.5 rounded-full">@property.PropertyType</span>
                                <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full ml-2">For Sale</span>
                            </div>

                            <h3 class="text-xl font-bold text-gray-800 mb-2 hover:text-sky-600 transition-colors duration-300">@property.Title</h3>

                            <div class="flex items-center text-gray-500 mb-3">
                                <i class="fa-solid fa-location-dot mr-2"></i>
                                <span>@property.District, @property.City</span>
                            </div>

                            <div class="property-features">
                                @if (property.PropertyType == "House")
                                {
                                    <div class="property-feature">
                                        <i class="fa-solid fa-bed"></i>
                                        <span>@(property.Bedrooms ?? 0) Beds</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-bath"></i>
                                        <span>@(property.Bathrooms ?? 0) Baths</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-ruler-combined"></i>
                                        <span>@(property.BuildupArea ?? 0) sq.ft</span>
                                    </div>
                                }
                                else if (property.PropertyType == "Apartment")
                                {
                                    <div class="property-feature">
                                        <i class="fa-solid fa-bed"></i>
                                        <span>@(property.Rooms ?? 0) Rooms</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-bath"></i>
                                        <span>@(property.Bathrooms ?? 0) Baths</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-ruler-combined"></i>
                                        <span>@(property.RoomSize ?? 0) sq.ft</span>
                                    </div>
                                }
                                else if (property.PropertyType == "Land")
                                {
                                    <div class="property-feature">
                                        <i class="fa-solid fa-mountain-sun"></i>
                                        <span>@(property.LandType ?? "Land")</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-ruler-combined"></i>
                                        <span>@(property.LandArea ?? 0) sq.ft</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-road"></i>
                                        <span>@property.RoadAccess</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="property-feature">
                                        <i class="fa-solid fa-location-dot"></i>
                                        <span>@property.City</span>
                                    </div>
                                    <div class="property-feature">
                                        <i class="fa-solid fa-tag"></i>
                                        <span>@property.PropertyType</span>
                                    </div>
                                }
                            </div>

                            <div class="pt-4 border-t border-gray-100 flex justify-between items-center">
                                <span class="text-2xl font-bold text-sky-600">Rs. @property.Price.ToString("N0")</span>
                                <div class="flex gap-2">
                                    <button onclick="toggleFavorite(@property.Id, this)" class="favorite-btn text-red-500 font-medium rounded-lg text-sm p-2 flex items-center transition-colors duration-300">
                                        <i class="fa-solid fa-heart"></i>
                                    </button>
                                    <a href="@Url.Action("Details", "Home", new { id = property.Id })" class="btn-view-details font-medium rounded-lg text-sm px-4 py-2 flex items-center">
                                        View Details <i class="fa-solid fa-arrow-right ml-2"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-favorites">
                <div class="text-center">
                    <div class="inline-flex items-center justify-center w-16 h-16 mb-6 rounded-full bg-blue-100 text-blue-500">
                        <i class="fa-regular fa-heart text-3xl"></i>
                    </div>
                    <h2 class="text-2xl font-bold mb-2">No Favorite Properties Yet</h2>
                    <p class="text-gray-600 mb-6">You haven't added any properties to your favorites list.</p>
                    <a href="@Url.Action("Home", "Home")" class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                        Browse Properties
                    </a>
                </div>
            </div>
        }
    </div>
</section>
<!-- Add this script section at the bottom of your Favorites.cshtml -->
<script>
function toggleFavorite(propertyId, button) {
    $.ajax({
        url: '@Url.Action("ToggleFavorite", "Home")',
        type: 'POST',
        data: { propertyId: propertyId },
        headers: {
            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
        },
        success: function(response) {
            if (response.success) {
                if (!response.isFavorite) {
                    // Remove the property card from the view
                    $(button).closest('.property-card').fadeOut(400, function() {
                        $(this).remove();
                        // If no properties left, show empty message
                        if ($('.property-card').length === 0) {
                            location.reload(); // Reload to show empty state
                        }
                    });
                    showToast('Property removed from favorites', 'info');
                }
            } else {
                showToast(response.message || 'Error updating favorites', 'error');
            }
        },
        error: function() {
            showToast('Error updating favorites. Please try again.', 'error');
        }
    });
}

function showToast(message, type) {
    const toast = $('<div>')
        .addClass(`toast-notification toast-${type}`)
        .text(message)
        .appendTo('body');

    setTimeout(() => {
        toast.fadeOut(() => toast.remove());
    }, 3000);
}
</script>