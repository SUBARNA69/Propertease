@model List<Propertease.Models.Properties>

<div class="mb-6">
    <div class="flex justify-between items-center mb-4">
        <h3 class="font-semibold text-lg">Recent Purchases</h3>
        <a href="@Url.Action("Purchases", "User")" class="text-blue-600 hover:text-blue-800 font-medium text-sm flex items-center">
            View All
            <svg class="w-4 h-4 ml-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M1 5h12m0 0L9 1m4 4L9 9" />
            </svg>
        </a>
    </div>

    @if (Model == null || Model.Count == 0)
    {
        <div class="bg-gray-50 rounded-lg border border-gray-200 p-6 text-center">
            <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
            <h2 class="text-xl font-semibold text-gray-700 mb-2">No purchases yet</h2>
            <p class="text-gray-600 mb-4">Properties you view that are later marked as sold will appear here.</p>
            <a href="@Url.Action("Properties", "Home")" class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition duration-300">
                Browse Properties
            </a>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            @foreach (var property in Model)
            {
                <div class="bg-white rounded-lg shadow-md overflow-hidden flex">
                    <div class="w-1/3 relative">
                        <img src="@property.PropertyImages" alt="@property.Title" class="w-full h-full object-cover">
                        <div class="absolute top-0 right-0 bg-green-500 text-white px-2 py-1 m-1 rounded-full text-xs font-medium">
                            Purchased
                        </div>
                    </div>
                    <div class="w-2/3 p-3">
                        <h3 class="text-base font-semibold text-gray-800 mb-1 line-clamp-1">@property.Title</h3>
                        <div class="flex items-center text-gray-600 mb-1">
                            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            </svg>
                            <span class="text-xs line-clamp-1">@property.District, @property.Province,</span>
                        </div>
                        <div class="text-sm font-bold text-green-600 mb-2">
                            $@property.Price.ToString("N0")
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="text-gray-500">
                                Purchased Date: @(property.SoldDate.HasValue ? property.SoldDate.Value.ToString("MMMM dd, yyyy") : "N/A")
                            </p>
                            <a href="@Url.Action("PropertyDetails", "Home", new { id = property.Id })"
                               class="text-xs bg-blue-600 hover:bg-blue-700 text-white font-medium py-1 px-2 rounded transition duration-300">
                                View
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
